plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'jacoco'
}

allprojects {
    group = 'com.globalcitizen'
    version = '1.0.0'
    sourceCompatibility = '17'
    targetCompatibility = '17'

    repositories {
        mavenCentral()
        maven { url = 'https://repo.spring.io/milestone' }
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = true
            html.required = true
        }
    }

    sonarqube {
        properties {
            property "sonar.projectKey", "global-citizen"
            property "sonar.organization", "global-citizen"
            property "sonar.host.url", "https://sonarcloud.io"
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'

    dependencies {
        // Spring Boot Starters
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        // Database
        implementation 'org.postgresql:postgresql'
        implementation 'org.flywaydb:flyway-core'

        // JWT and Security
        implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

        // Cryptography
        implementation 'org.bouncycastle:bcprov-jdk18on:1.77'
        implementation 'org.bouncycastle:bcpkix-jdk18on:1.77'
        
        // QR Code Generation
        implementation 'com.google.zxing:core:3.5.2'
        implementation 'com.google.zxing:javase:3.5.2'

        // JSON Processing
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

        // API Documentation
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

        // Monitoring and Logging
        implementation 'io.micrometer:micrometer-registry-prometheus'
        implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

        // Testing
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.testcontainers:postgresql'
        testImplementation 'org.mockito:mockito-core'
        testImplementation 'org.mockito:mockito-junit-jupiter'

        // Development Tools
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }
}

// Central Authority Service
project(':central-authority') {
    bootJar {
        enabled = true
    }
}

// Country Service
project(':country-service') {
    bootJar {
        enabled = true
    }
}

// Embassy Service
project(':embassy-service') {
    bootJar {
        enabled = true
    }
}

// Immigration Service
project(':immigration-service') {
    bootJar {
        enabled = true
    }
} 